LS()
ls()
View(mtmtcars)
View(mtcars)
View(diamonds)
hist(mtcars$hp)
hist(mtcars$hp)
cls
clear
View(mtcars)
Sys.setenv(LANG="en")
hist(mtcars$hp)
View(mtcars)
Sys.setenv(LANG="en")
hist(mtcars$hp)
View(mtcars)
Sys.setenv(LANG="en")
hist(mtcars$hp)
install.packages("igraph")
help(hist)
install.packages("gephi")
a <- true
a <- T
a <- `TRRE`
a <- 'TRRE'
a <- 'TRRE' + 'FEG'
B = 4
VEC1 <- c("bob", "ziroll")
VEC3 <- c(as.factor("beb"), as.factor("zirold")
VEC3 <- c(as.factor("beb"), as.factor("zirold"))
VEC3 <- c("beb", "zirold")
source('~/.active-rstudio-document')
myMatrix <- matrix(c(1, 2),2,2)
View(myMatrix)
myMatrix <- matrix(c(1, 2),2,4)
View(myMatrix)
View(myMatrix)
View(myMatrix)
2
View(myMatrix)
myMatrix <- matrix(c(1, 2, 3),2,3)
View(myMatrix)
myMatrix <- matrix(c(1, 2, 3),2,5)
myMatrix <- matrix(c(1, 2, 3),2,4)
View(myMatrix)
myMatrix <- matrix(c(1, 2, 3),2,1)
VEC1[1]
VEC1[0]
0/0
sessionInfo()
library(quanted)
library(quanteda)
install.packages(quanteda)
install.packages("quanteda')
install.packages(quanteda)
''
"
install.packages("quanteda")
library(quanteda)
library("quanteda")
sessionInfo()
install.packages("quanteda")
library("quanteda")
library(quanteda)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(quanteda)
install.packages(data.table)
install.packages("data.table")
library(quanteda)
sessionInfo()
install.packages("tidytext")
library(tidytext)
sessionInfo()
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
getwd()
load("enron_data_revised.rda")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
load("enron_data_revised.rda")
library(igraph)
library(gplots)
# Cargamos librerías y dataset
```{r}
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
```
# Cargamos librerías y dataset
```{r}
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
nrow(edges.full)
str(edges.full)
print("Número de aristas en el dataset:")
nrow(edges.full)
print("Descripción del objeto 'aristas':")
str(edges.full)
print("Número de aristas en el dataset:")
nrow(edges.full)
print("\nDescripción del objeto 'aristas':")
str(edges.full)
print("Número de aristas en el dataset:")
nrow(edges.full)
print("/nDescripción del objeto 'aristas':")
str(edges.full)
print("\n Descripción del objeto 'aristas':")
print("Número de aristas en el dataset:")
nrow(edges.full)
print("\n Descripción del objeto 'aristas':")
str(edges.full)
print("Número de aristas en el dataset:")
nrow(edges.full)
println("Descripción del objeto 'aristas':")
print("Descripción del objeto 'aristas':")
print("Número de aristas en el dataset:")
nrow(edges.full)
print("Descripción del objeto 'aristas':")
str(edges.full)
print("El número de aristas en el dataset:")
nrow(edges.full)
print("La descripción del objeto 'aristas':")
str(edges.full)
# Cargamos librerías y dataset
```{r}
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
```
# Antes de empezar, hemos de entender las características del dataset
Enron fue una empresa energética estadounidense que, a principios de los 2001, quebró inesperadamente tras hacerse público un escándalo relacionado con prácticas irregulares de contabilidad.
Al cabo de un tiempo, se publicaron en forma de dataset una lista de emails que probaban estas malas prácticas y es ese el dataset sobre el que vamos a trabajar.
Este dataset contiene vértices; que representan empleados de enron, y aristas; que representan emails enviados entre los diferentes empleados.
# Veamos primero las dimensiones de los datos
```{r}
print("El número de aristas en el dataset:")
nrow(edges.full)
print("La descripción del objeto 'aristas':")
st
# Cargamos librerías y dataset
```{r}
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
```
# Antes de empezar, hemos de entender las características del dataset
Enron fue una empresa energética estadounidense que, a principios de los 2001, quebró inesperadamente tras hacerse público un escándalo relacionado con prácticas irregulares de contabilidad.
Al cabo de un tiempo, se publicaron en forma de dataset una lista de emails que probaban estas malas prácticas y es ese el dataset sobre el que vamos a trabajar.
Este dataset contiene vértices; que representan empleados de enron, y aristas; que representan emails enviados entre los diferentes empleados.
# Veamos primero las dimensiones de los datos
```{r}
print("El número de aristas en el dataset:")
nrow(edges.full)
print("La descripción del objeto 'aristas':")
str(edges.full)
```
print("El número de aristas en el dataset:")
nrow(edges.full)
print("La descripción del objeto 'aristas':")
str(edges.full)
print("El número de nodos en el dataset:")
nrow(nodes)
print("La descripción del objeto 'aristas':")
str(nodes.full)
print("El número de aristas en el dataset:")
nrow(edges.full)
print("La descripción del objeto 'aristas':")
str(edges.full)
print("El número de nodos en el dataset:")
nrow(nodes)
print("La descripción del objeto 'aristas':")
str(nodes)
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
library(igraph)
library(gplots)
V(network.full)[1:10]
library(igraph)
# required to improve plots with function colorpanel
library(gplots)
setwd("C:/Users/Javs/Downloads/Clase/3/3.2/BusquedaYAnalisisDeLaInformacion/Final")
load("enron_data_revised.rda")
nrow(edges.full)
str(edges.full)
edges.full$date.R <- as.POSIXct(edges.full$date)
summary(edges.full$date.R)
# Number of nodes
nrow(nodes)
# Description of the nodes object
str(nodes)
network.full <- graph.data.frame(edges.full[,c("sender",
"receiver",
"type",
"date",
"subject")],
directed = TRUE,
vertices = nodes)
class(network.full)
summary(network.full)
V(network.full)[1:10]
E(network.full)[1:10]
table(V(network.full)$status)
write.graph(network.full,
file = "network_full.graphml",
format = "graphml")
get.shortest.paths(from = V(network.full)$lastName == "Pereira",
to = V(network.full)$lastName == "Horton",
graph = network.full)
nodes[c(138,11,132),]
diameter(network.full)
farthest.nodes(network.full)
edge_density(network.full)
# or also:
ecount(network.full)/(vcount(network.full)*(vcount(network.full)-1))
reciprocity(network.full)
dyad_census(network.full) # Mutual, asymmetric, and null node pairs
2*dyad_census(network.full)$mut/ecount(network.full) # Calculating reciprocity
View(network)
save.image()
save.image('oju')
